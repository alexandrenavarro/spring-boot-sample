{
	"positiveMatches":{
		"AuditAutoConfiguration.AuditEventRepositoryConfiguration":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) found no beans"
			}
		],
		"EndpointAutoConfiguration#autoConfigurationAuditEndpoint":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: org.springframework.boot.autoconfigure.condition.ConditionEvaluationReport; SearchStrategy: all) found the following [autoConfigurationReport] @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.AutoConfigurationReportEndpoint; SearchStrategy: current) found no beans"
			}
		],
		"EndpointAutoConfiguration#beansEndpoint":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.BeansEndpoint; SearchStrategy: all) found no beans"
			}
		],
		"EndpointAutoConfiguration#configurationPropertiesReportEndpoint":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found no beans"
			}
		],
		"EndpointAutoConfiguration#dumpEndpoint":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.DumpEndpoint; SearchStrategy: all) found no beans"
			}
		],
		"EndpointAutoConfiguration#environmentEndpoint":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.EnvironmentEndpoint; SearchStrategy: all) found no beans"
			}
		],
		"EndpointAutoConfiguration#healthEndpoint":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.HealthEndpoint; SearchStrategy: all) found no beans"
			}
		],
		"EndpointAutoConfiguration#infoEndpoint":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.InfoEndpoint; SearchStrategy: all) found no beans"
			}
		],
		"EndpointAutoConfiguration#metricsEndpoint":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.MetricsEndpoint; SearchStrategy: all) found no beans"
			}
		],
		"EndpointAutoConfiguration#shutdownEndpoint":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.ShutdownEndpoint; SearchStrategy: all) found no beans"
			}
		],
		"EndpointAutoConfiguration#traceEndpoint":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.TraceEndpoint; SearchStrategy: all) found no beans"
			}
		],
		"EndpointAutoConfiguration.RequestMappingEndpointConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: org.springframework.web.servlet.handler.AbstractHandlerMethodMapping"
			}
		],
		"EndpointAutoConfiguration.RequestMappingEndpointConfiguration#requestMappingEndpoint":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.RequestMappingEndpoint; SearchStrategy: all) found no beans"
			}
		],
		"EndpointMBeanExportAutoConfiguration":[
			{
				"condition":"OnExpressionCondition",
				"message":"SpEL expression on org.springframework.boot.actuate.autoconfigure.EndpointMBeanExportAutoConfiguration: ${endpoints.jmx.enabled:true} && ${spring.jmx.enabled:true}"
			}
		],
		"EndpointWebMvcAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: javax.servlet.Servlet,org.springframework.web.servlet.DispatcherServlet"
			},
			{
				"condition":"OnWebApplicationCondition",
				"message":"found web application StandardServletEnvironment"
			}
		],
		"EndpointWebMvcAutoConfiguration#endpointHandlerMapping":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping; SearchStrategy: all) found no beans"
			}
		],
		"EndpointWebMvcAutoConfiguration#environmentMvcEndpoint":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: org.springframework.boot.actuate.endpoint.EnvironmentEndpoint; SearchStrategy: all) found the following [environmentEndpoint]"
			},
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			}
		],
		"EndpointWebMvcAutoConfiguration#healthMvcEndpoint":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: org.springframework.boot.actuate.endpoint.HealthEndpoint; SearchStrategy: all) found the following [healthEndpoint]"
			},
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			}
		],
		"EndpointWebMvcAutoConfiguration#metricsMvcEndpoint":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: org.springframework.boot.actuate.endpoint.MetricsEndpoint; SearchStrategy: all) found the following [metricsEndpoint]"
			},
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			}
		],
		"EndpointWebMvcAutoConfiguration#mvcEndpoints":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.mvc.MvcEndpoints; SearchStrategy: all) found no beans"
			}
		],
		"EndpointWebMvcAutoConfiguration#shutdownMvcEndpoint":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: org.springframework.boot.actuate.endpoint.ShutdownEndpoint; SearchStrategy: all) found the following [shutdownEndpoint]"
			},
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			}
		],
		"HealthIndicatorAutoConfiguration#healthAggregator":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthAggregator; SearchStrategy: all) found no beans"
			}
		],
		"HealthIndicatorAutoConfiguration.DataSourcesHealthIndicatorConfiguration":[
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			},
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found the following [dataSource]"
			}
		],
		"HealthIndicatorAutoConfiguration.DataSourcesHealthIndicatorConfiguration#dbHealthIndicator":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (names: dbHealthIndicator; SearchStrategy: all) found no beans"
			}
		],
		"HealthIndicatorAutoConfiguration.DiskSpaceHealthIndicatorConfiguration":[
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			}
		],
		"HealthIndicatorAutoConfiguration.DiskSpaceHealthIndicatorConfiguration#diskSpaceHealthIndicator":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) found no beans"
			}
		],
		"ManagementServerPropertiesAutoConfiguration#managementServerProperties":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.ManagementServerProperties; SearchStrategy: all) found no beans"
			}
		],
		"MetricFilterAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: javax.servlet.Servlet,javax.servlet.ServletRegistration,org.springframework.web.filter.OncePerRequestFilter,org.springframework.web.servlet.HandlerMapping"
			},
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: org.springframework.boot.actuate.metrics.CounterService,org.springframework.boot.actuate.metrics.GaugeService; SearchStrategy: all) found the following [counterService, gaugeService]"
			}
		],
		"MetricRepositoryAutoConfiguration#counterService":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.CounterService; SearchStrategy: all) found no beans"
			}
		],
		"MetricRepositoryAutoConfiguration#gaugeService":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.GaugeService; SearchStrategy: all) found no beans"
			}
		],
		"MetricRepositoryAutoConfiguration.MetricRepositoryConfiguration":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.repository.MetricRepository; SearchStrategy: all) found no beans"
			}
		],
		"PublicMetricsAutoConfiguration.DataSourceMetricsConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: javax.sql.DataSource"
			},
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found the following [dataSource]"
			}
		],
		"PublicMetricsAutoConfiguration.DataSourceMetricsConfiguration#dataSourcePublicMetrics":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) found the following [tomcatPoolDataSourceMetadataProvider] @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.DataSourcePublicMetrics; SearchStrategy: all) found no beans"
			}
		],
		"PublicMetricsAutoConfiguration.TomcatMetricsConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: javax.servlet.Servlet,org.apache.catalina.startup.Tomcat"
			}
		],
		"PublicMetricsAutoConfiguration.TomcatMetricsConfiguration#tomcatPublicMetrics":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.TomcatPublicMetrics; SearchStrategy: all) found no beans"
			}
		],
		"TraceRepositoryAutoConfiguration#traceRepository":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.TraceRepository; SearchStrategy: all) found no beans"
			}
		],
		"TraceWebFilterAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: javax.servlet.Servlet,org.springframework.web.servlet.DispatcherServlet,javax.servlet.ServletRegistration"
			}
		],
		"PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) found no beans"
			}
		],
		"AopAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: org.springframework.context.annotation.EnableAspectJAutoProxy,org.aspectj.lang.annotation.Aspect,org.aspectj.lang.reflect.Advice"
			},
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			}
		],
		"AopAutoConfiguration.JdkDynamicAutoProxyConfiguration":[
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			}
		],
		"PersistenceExceptionTranslationAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"
			}
		],
		"PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) found no beans"
			},
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			}
		],
		"JpaRepositoriesAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: org.springframework.data.jpa.repository.JpaRepository"
			},
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			},
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found the following [dataSource] @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) found no beans"
			}
		],
		"SpringDataWebAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: org.springframework.data.web.PageableHandlerMethodArgumentResolver,org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter"
			},
			{
				"condition":"OnWebApplicationCondition",
				"message":"found web application StandardServletEnvironment"
			},
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) found no beans"
			}
		],
		"JacksonAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: com.fasterxml.jackson.databind.ObjectMapper"
			}
		],
		"JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: com.fasterxml.jackson.databind.ObjectMapper,org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
			}
		],
		"JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) found no beans"
			}
		],
		"JacksonAutoConfiguration.JacksonObjectMapperConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: com.fasterxml.jackson.databind.ObjectMapper,org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
			}
		],
		"JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found no beans"
			}
		],
		"DataSourceAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: javax.sql.DataSource,org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
			}
		],
		"DataSourceAutoConfiguration.DataSourceInitializerConfiguration":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer; SearchStrategy: all) found no beans"
			}
		],
		"DataSourceAutoConfiguration.JdbcTemplateConfiguration":[
			{
				"condition":"DataSourceAutoConfiguration.DataSourceAvailableCondition",
				"message":"existing auto database detected"
			}
		],
		"DataSourceAutoConfiguration.JdbcTemplateConfiguration#jdbcTemplate":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) found no beans"
			}
		],
		"DataSourceAutoConfiguration.JdbcTemplateConfiguration#namedParameterJdbcTemplate":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) found no beans"
			}
		],
		"DataSourceAutoConfiguration.NonEmbeddedConfiguration":[
			{
				"condition":"DataSourceAutoConfiguration.NonEmbeddedDataSourceCondition",
				"message":"supported DataSource class found"
			},
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) found no beans"
			}
		],
		"DataSourceTransactionManagerAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: org.springframework.jdbc.core.JdbcTemplate,org.springframework.transaction.PlatformTransactionManager"
			}
		],
		"DataSourceTransactionManagerAutoConfiguration.TransactionManagementConfiguration":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) found no beans"
			}
		],
		"DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: org.apache.tomcat.jdbc.pool.DataSource"
			}
		],
		"JmxAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: org.springframework.jmx.export.MBeanExporter"
			},
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			}
		],
		"JmxAutoConfiguration#mbeanExporter":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) found no beans"
			}
		],
		"JmxAutoConfiguration#mbeanServer":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) found no beans"
			}
		],
		"JmxAutoConfiguration#objectNamingStrategy":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) found no beans"
			}
		],
		"JtaAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: javax.transaction.Transaction"
			},
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			}
		],
		"HibernateJpaAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,org.springframework.transaction.annotation.EnableTransactionManagement,javax.persistence.EntityManager"
			},
			{
				"condition":"HibernateJpaAutoConfiguration.HibernateEntityManagerCondition",
				"message":"found HibernateEntityManager class"
			}
		],
		"JpaBaseConfiguration#entityManagerFactory":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean; SearchStrategy: all) found no beans"
			}
		],
		"JpaBaseConfiguration#entityManagerFactoryBuilder":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) found no beans"
			}
		],
		"JpaBaseConfiguration#jpaVendorAdapter":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) found no beans"
			}
		],
		"JpaBaseConfiguration#transactionManager":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found no beans"
			}
		],
		"JpaBaseConfiguration.JpaWebConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter"
			},
			{
				"condition":"OnWebApplicationCondition",
				"message":"found web application StandardServletEnvironment"
			},
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			},
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) found no beans"
			}
		],
		"DispatcherServletAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: org.springframework.web.servlet.DispatcherServlet"
			},
			{
				"condition":"OnWebApplicationCondition",
				"message":"found web application StandardServletEnvironment"
			}
		],
		"DispatcherServletAutoConfiguration.DispatcherServletConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: javax.servlet.ServletRegistration"
			},
			{
				"condition":"DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition",
				"message":"no ServletRegistrationBean found"
			}
		],
		"EmbeddedServletContainerAutoConfiguration":[
			{
				"condition":"OnWebApplicationCondition",
				"message":"found web application StandardServletEnvironment"
			}
		],
		"EmbeddedServletContainerAutoConfiguration.EmbeddedTomcat":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: javax.servlet.Servlet,org.apache.catalina.startup.Tomcat"
			},
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.context.embedded.EmbeddedServletContainerFactory; SearchStrategy: current) found no beans"
			}
		],
		"ErrorMvcAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: javax.servlet.Servlet,org.springframework.web.servlet.DispatcherServlet"
			},
			{
				"condition":"OnWebApplicationCondition",
				"message":"found web application StandardServletEnvironment"
			}
		],
		"ErrorMvcAutoConfiguration#basicErrorController":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.ErrorController; SearchStrategy: current) found no beans"
			}
		],
		"ErrorMvcAutoConfiguration#errorAttributes":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.ErrorAttributes; SearchStrategy: current) found no beans"
			}
		],
		"ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration":[
			{
				"condition":"ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition",
				"message":"No error template view detected"
			},
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			}
		],
		"ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found no beans"
			}
		],
		"ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (names: error; SearchStrategy: all) found no beans"
			}
		],
		"HttpEncodingAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: org.springframework.web.filter.CharacterEncodingFilter"
			},
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			}
		],
		"HttpEncodingAutoConfiguration#characterEncodingFilter":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) found no beans"
			}
		],
		"HttpMessageConvertersAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: org.springframework.http.converter.HttpMessageConverter"
			}
		],
		"HttpMessageConvertersAutoConfiguration#messageConverters":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.HttpMessageConverters; SearchStrategy: all) found no beans"
			}
		],
		"HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: org.springframework.http.converter.StringHttpMessageConverter"
			}
		],
		"HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter":[
			{
				"conditJacksonHttpMessageConvertersConfigurationion":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) found no beans"
			}
		],
		"JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: com.fasterxml.jackson.databind.ObjectMapper"
			},
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			},
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found the following [jacksonObjectMapper]"
			}
		],
		"JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found no beans"
			}
		],
		"MultipartAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: javax.servlet.Servlet,org.springframework.web.multipart.support.StandardServletMultipartResolver,javax.servlet.MultipartConfigElement"
			},
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			}
		],
		"MultipartAutoConfiguration#multipartConfigElement":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement; SearchStrategy: all) found no beans"
			}
		],
		"MultipartAutoConfiguration#multipartResolver":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) found no beans"
			}
		],
		"ServerPropertiesAutoConfiguration":[
			{
				"condition":"OnWebApplicationCondition",
				"message":"found web application StandardServletEnvironment"
			}
		],
		"ServerPropertiesAutoConfiguration#serverProperties":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.ServerProperties; SearchStrategy: current) found no beans"
			}
		],
		"WebMvcAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: javax.servlet.Servlet,org.springframework.web.servlet.DispatcherServlet,org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter"
			},
			{
				"condition":"OnWebApplicationCondition",
				"message":"found web application StandardServletEnvironment"
			},
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) found no beans"
			}
		],
		"WebMvcAutoConfiguration#hiddenHttpMethodFilter":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.web.filter.HiddenHttpMethodFilter; SearchStrategy: all) found no beans"
			}
		],
		"WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: org.springframework.web.servlet.View; SearchStrategy: all) found the following [error]"
			}
		],
		"WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) found no beans"
			}
		],
		"WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextListener":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener; SearchStrategy: all) found no beans"
			}
		],
		"WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found the following [defaultViewResolver, beanNameViewResolver, mvcViewResolver] @ConditionalOnMissingBean (names: viewResolver; types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) found no beans"
			}
		],
		"WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter.FaviconConfiguration":[
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			}
		],
		"WebSocketAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: javax.servlet.Servlet,javax.websocket.server.ServerContainer"
			}
		],
		"WebSocketAutoConfiguration.TomcatWebSocketConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: org.apache.catalina.startup.Tomcat,org.apache.tomcat.websocket.server.WsSci"
			}
		],
		"WebSocketAutoConfiguration.TomcatWebSocketConfiguration#websocketContainerCustomizer":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (names: websocketContainerCustomizer; SearchStrategy: all) found no beans"
			}
		]
	},
	"negativeMatches":{
		"AuditAutoConfiguration#authenticationAuditListener":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.security.authentication.event.AbstractAuthenticationEvent"
			}
		],
		"AuditAutoConfiguration#authorizationAuditListener":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.security.access.event.AbstractAuthorizationEvent"
			}
		],
		"CrshAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.crsh.plugin.PluginLifeCycle"
			}
		],
		"EndpointMBeanExportAutoConfiguration#mbeanServer":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) found the following [mbeanServer]"
			}
		],
		"HealthIndicatorAutoConfiguration#applicationHealthIndicator":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthIndicator; SearchStrategy: all) found the following [diskSpaceHealthIndicator, dbHealthIndicator]"
			}
		],
		"HealthIndicatorAutoConfiguration.MongoHealthIndicatorConfiguration":[
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			},
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: org.springframework.data.mongodb.core.MongoTemplate; SearchStrategy: all) found no beans"
			}
		],
		"HealthIndicatorAutoConfiguration.RabbitHealthIndicatorConfiguration":[
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			},
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: org.springframework.amqp.rabbit.core.RabbitTemplate; SearchStrategy: all) found no beans"
			}
		],
		"HealthIndicatorAutoConfiguration.RedisHealthIndicatorConfiguration":[
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			},
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found no beans"
			}
		],
		"HealthIndicatorAutoConfiguration.SolrHealthIndicatorConfiguration":[
			{
				"condition":"OnPropertyCondition",
				"message":"matched"
			},
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: org.apache.solr.client.solrj.SolrServer; SearchStrategy: all) found no beans"
			}
		],
		"JolokiaAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.jolokia.http.AgentServlet"
			}
		],
		"ManagementSecurityAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"
			}
		],
		"ManagementServerPropertiesAutoConfiguration#securityProperties":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"
			}
		],
		"ManagementServerPropertiesAutoConfiguration#serverProperties":[
			{
				"condition":"OnWebApplicationCondition",
				"message":"found web application StandardServletEnvironment"
			},
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.ServerProperties; SearchStrategy: all) found the following [serverProperties]"
			}
		],
		"MetricRepositoryAutoConfiguration.DropwizardMetricRegistryConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: com.codahale.metrics.MetricRegistry"
			}
		],
		"MetricRepositoryAutoConfiguration.MetricsChannelConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.messaging.MessageChannel"
			}
		],
		"PublicMetricsAutoConfiguration#richGaugePublicMetrics":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: org.springframework.boot.actuate.metrics.rich.RichGaugeReader; SearchStrategy: all) found no beans"
			}
		],
		"MessageSourceAutoConfiguration":[
			{
				"condition":"MessageSourceAutoConfiguration.ResourceBundleCondition",
				"message":"No bundle found for spring.messages.basename: messages"
			}
		],
		"RabbitAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.amqp.rabbit.core.RabbitTemplate,com.rabbitmq.client.Channel"
			}
		],
		"AopAutoConfiguration.CglibAutoProxyConfiguration":[
			{
				"condition":"OnPropertyCondition",
				"message":"@ConditionalOnProperty missing required properties spring.aop.proxy-target-class "
			}
		],
		"BatchAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.batch.core.launch.JobLauncher"
			}
		],
		"CloudAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.cloud.config.java.CloudScanConfiguration"
			}
		],
		"ElasticsearchRepositoriesAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.elasticsearch.client.Client,org.springframework.data.elasticsearch.repository.ElasticsearchRepository"
			}
		],
		"MongoRepositoriesAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: com.mongodb.Mongo,org.springframework.data.mongodb.repository.MongoRepository"
			}
		],
		"RepositoryRestMvcAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration"
			}
		],
		"SolrRepositoriesAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.apache.solr.client.solrj.SolrServer,org.springframework.data.solr.repository.SolrRepository"
			}
		],
		"ElasticsearchAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.elasticsearch.client.Client,org.springframework.data.elasticsearch.client.TransportClientFactoryBean,org.springframework.data.elasticsearch.client.NodeClientFactoryBean"
			}
		],
		"ElasticsearchDataAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.elasticsearch.client.Client,org.springframework.data.elasticsearch.core.ElasticsearchTemplate"
			}
		],
		"FlywayAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.flywaydb.core.Flyway"
			}
		],
		"FreeMarkerAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: freemarker.template.Configuration,org.springframework.ui.freemarker.FreeMarkerConfigurationFactory"
			}
		],
		"GroovyTemplateAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: groovy.text.markup.MarkupTemplateEngine"
			}
		],
		"GsonAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: com.google.gson.Gson"
			}
		],
		"HypermediaAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.hateoas.Resource,org.springframework.plugin.core.Plugin"
			}
		],
		"IntegrationAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.integration.config.EnableIntegration"
			}
		],
		"JacksonAutoConfiguration.JodaDateTimeJacksonConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.joda.time.DateTime,com.fasterxml.jackson.datatype.joda.ser.DateTimeSerializer"
			}
		],
		"DataSourceAutoConfiguration.EmbeddedConfiguration":[
			{
				"condition":"DataSourceAutoConfiguration.EmbeddedDataSourceCondition",
				"message":"existing non-embedded database detected"
			}
		],
		"DataSourceAutoConfiguration.TomcatDataSourceJmxConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: org.apache.tomcat.jdbc.pool.DataSourceProxy"
			},
			{
				"condition":"DataSourceAutoConfiguration.DataSourceAvailableCondition",
				"message":"existing auto database detected"
			},
			{
				"condition":"OnPropertyCondition",
				"message":"@ConditionalOnProperty missing required properties spring.datasource.jmx-enabled "
			}
		],
		"DataSourceTransactionManagerAutoConfiguration#transactionManager":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (names: transactionManager; SearchStrategy: all) found the following [transactionManager]"
			}
		],
		"JndiDataSourceAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: javax.sql.DataSource,org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
			},
			{
				"condition":"OnPropertyCondition",
				"message":"@ConditionalOnProperty missing required properties spring.datasource.jndi-name "
			}
		],
		"XADataSourceAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: javax.sql.DataSource,javax.transaction.TransactionManager,org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
			},
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: org.springframework.boot.jta.XADataSourceWrapper; SearchStrategy: all) found no beans"
			}
		],
		"DataSourcePoolMetadataProvidersConfiguration.CommonsDbcpPoolDataSourceMetadataProviderConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.apache.commons.dbcp.BasicDataSource"
			}
		],
		"DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: com.zaxxer.hikari.HikariDataSource"
			}
		],
		"JerseyAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.glassfish.jersey.server.spring.SpringComponentProvider"
			}
		],
		"JmsAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.jms.core.JmsTemplate"
			}
		],
		"JndiConnectionFactoryAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.jms.core.JmsTemplate"
			}
		],
		"ActiveMQAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: javax.jms.ConnectionFactory,org.apache.activemq.ActiveMQConnectionFactory"
			}
		],
		"HornetQAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: javax.jms.ConnectionFactory,org.hornetq.api.jms.HornetQJMSClient"
			}
		],
		"AtomikosJtaConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: com.atomikos.icatch.jta.UserTransactionManager"
			}
		],
		"BitronixJtaConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: bitronix.tm.jndi.BitronixContext"
			}
		],
		"JndiJtaConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"@ConditionalOnClass classes found: org.springframework.transaction.jta.JtaTransactionManager"
			},
			{
				"condition":"OnJndiCondition",
				"message":"JNDI environment is not available"
			}
		],
		"LiquibaseAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: liquibase.integration.spring.SpringLiquibase"
			}
		],
		"MailSenderAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: javax.mail.internet.MimeMessage"
			}
		],
		"DeviceDelegatingViewResolverAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.mobile.device.view.LiteDeviceDelegatingViewResolver"
			}
		],
		"DeviceResolverAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.mobile.device.DeviceResolverHandlerInterceptor,org.springframework.mobile.device.DeviceHandlerMethodArgumentResolver"
			}
		],
		"SitePreferenceAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.mobile.device.site.SitePreferenceHandlerInterceptor,org.springframework.mobile.device.site.SitePreferenceHandlerMethodArgumentResolver"
			}
		],
		"MongoAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: com.mongodb.Mongo"
			}
		],
		"MongoDataAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: com.mongodb.Mongo,org.springframework.data.mongodb.core.MongoTemplate"
			}
		],
		"MustacheAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: com.samskivert.mustache.Mustache"
			}
		],
		"ReactorAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: reactor.spring.context.config.EnableReactor,reactor.core.Environment"
			}
		],
		"RedisAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.data.redis.connection.jedis.JedisConnection,org.springframework.data.redis.core.RedisOperations,redis.clients.jedis.Jedis"
			}
		],
		"FallbackWebSecurityAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"
			}
		],
		"SecurityAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.config.annotation.authentication.configurers.GlobalAuthenticationConfigurerAdapter"
			}
		],
		"FacebookAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.social.config.annotation.SocialConfigurerAdapter,org.springframework.social.facebook.connect.FacebookConnectionFactory"
			}
		],
		"LinkedInAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.social.config.annotation.SocialConfigurerAdapter,org.springframework.social.linkedin.connect.LinkedInConnectionFactory"
			}
		],
		"SocialWebAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.social.connect.web.ConnectController,org.springframework.social.config.annotation.SocialConfigurerAdapter"
			}
		],
		"TwitterAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.springframework.social.config.annotation.SocialConfigurerAdapter,org.springframework.social.twitter.connect.TwitterConnectionFactory"
			}
		],
		"SolrAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.apache.solr.client.solrj.impl.HttpSolrServer,org.apache.solr.client.solrj.impl.CloudSolrServer"
			}
		],
		"ThymeleafAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.thymeleaf.spring4.SpringTemplateEngine"
			}
		],
		"VelocityAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.apache.velocity.app.VelocityEngine,org.springframework.ui.velocity.VelocityEngineFactory"
			}
		],
		"DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) found no beans"
			}
		],
		"EmbeddedServletContainerAutoConfiguration.EmbeddedJetty":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.eclipse.jetty.server.Server,org.eclipse.jetty.util.Loader"
			}
		],
		"EmbeddedServletContainerAutoConfiguration.EmbeddedUndertow":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: io.undertow.Undertow,org.xnio.SslClientAuthMode"
			}
		],
		"GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: com.google.gson.Gson"
			}
		],
		"GzipFilterAutoConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.eclipse.jetty.servlets.GzipFilter"
			}
		],
		"JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: com.fasterxml.jackson.dataformat.xml.XmlMapper"
			}
		],
		"WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#dateFormatter":[
			{
				"condition":"OnPropertyCondition",
				"message":"@ConditionalOnProperty missing required properties spring.mvc.date-format "
			}
		],
		"WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#localeResolver":[
			{
				"condition":"OnBeanCondition",
				"message":"@ConditionalOnMissingBean (types: org.springframework.web.servlet.LocaleResolver; SearchStrategy: all) found no beans"
			},
			{
				"condition":"OnPropertyCondition",
				"message":"@ConditionalOnProperty missing required properties spring.mvc.locale "
			}
		],
		"WebSocketAutoConfiguration.JettyWebSocketConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer"
			}
		],
		"WebSocketAutoConfiguration.UndertowWebSocketConfiguration":[
			{
				"condition":"OnClassCondition",
				"message":"required @ConditionalOnClass classes not found: io.undertow.websockets.jsr.Bootstrap"
			}
		]
	}
}